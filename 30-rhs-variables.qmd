---
title: "Righthand side variables preparation"
authors: 
  - "Eduard Bukin"
format: 
  html:
    fig-width: 14
    fig-height: 9
    fig-retina: true
editor: source
bibliography: references.bib
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: setup
#| echo: false
#| warning: false
#| message: false
#| error: false

# Chunk setup
knitr::opts_chunk$set(
  echo = FALSE,
  message = FALSE,
  warning = FALSE,
  error = FALSE
)

pacman::p_load(
  sf, 
  knitr, 
  purrr,
  pins,
  scales,
  patchwork,
  dplyr, 
  tidyverse,
  modelsummary,
  flextable,
  correlation,
  datawizard
  )

# Loading locally-developed
list.files("R", pattern = "*.R$", full.names = TRUE, ignore.case = TRUE) |>
  walk(~ suppressMessages(source(.x)))

# Raw data root
root_raw <- "./data/raw"
root_temp <- "./data/temp"
root_clean <- "./data/clean"

# Data-storage boards
bd_raw <- root_raw |> file.path("api") |> board_folder(versioned = T)
bd_aux <- root_temp |> board_folder(versioned = T)
bd_clean <- root_clean |> board_folder(versioned = T)
bd_out <- "output/res-50-mfh" |> board_folder(versioned = T)
```


```{r var-name-set}
area_var <- "id"
year_var <- "year"
directpov <- "pov"
directvar <- "vardir"
```

## Dependent variable preparation

Direct estimates of poverty and its variance, `pov_direct`. 

```{r dta-load-direct}
pov_direct <- bd_clean |> pin_read("pov_direct") |> 
  rename(id = subcode) |> filter(type == "arop") |> 
  mutate(estimate = "Direct")
```

```{r}
#| echo: false
mfh_dt0 <- 
  pov_direct |>
  select(all_of(c(area_var, year_var, directpov, directvar))) |> 
  pivot_wider(
    id_cols = all_of(area_var),
    names_from = all_of(year_var),
    values_from = all_of(c(directpov, directvar)),
    names_glue = "{.value}{year}",
    values_fn = ~ dplyr::first(na.omit(.x))
  ) 
```

Wide-format reshaped direct poverty estimates have the following structure:

```{r}
mfh_dt0 |> glimpse()
```

## Right hand side (RHS) variables

Right hand side (RHS) variables i.e. indicators representative at the level of the target area for each area consist of two components:

-   Data present in the wide format, where each column represents an individual variable and row and observation for one area and one year. Specifically columns are:

    -   `id` regional identifier used to match RHS variables with regions and poverty estiamtes

    -   `year` year for which observations are used.

    -   `x1`, `x2`, `x3`, ..., `xn` are the RHS variables described in the metadata.

-   Metadata table describes briefly each variable and provides a short, self-explaining name, used in regression tables.

Loading and reshaping data.

```{r dta-load-rhs}
file_name <- "Auxiliary variables (edited v6).xlsx"

rhs_meta_0 <-
  file.path(root_raw, "data-other", file_name) |>
  readxl::read_excel(sheet = 2) |> 
  select(var = Variable, name = `Variable (in English)`) |> 
  mutate(var = str_to_lower(var))

rhs_dta_0 <- 
  suppressMessages(file.path(root_raw, "data-other", file_name) |>
      readxl::read_excel()) 

new_names <- 
  rhs_dta_0 |> slice(1) |> t() |> as.data.frame() |>
  rownames_to_column() |> as_tibble() |> 
  mutate(rowname = ifelse(str_detect(rowname, "\\.{2,}"), NA_character_, rowname)) |> 
  fill(rowname) |> 
  mutate(rowname = str_to_lower(rowname),
         rowname = ifelse(!is.na(V1), str_c(rowname,"__", V1), rowname)) |> 
  pull(rowname)

rhs_dta_0 <- 
  rhs_dta_0 |> 
  slice(-1) |> 
  (\(x){colnames(x) <- new_names; x})() |> 
  select(-no., -subregion) |> 
  pivot_longer(
    cols = matches("\\d{4}"), 
    values_transform = \(x) suppressWarnings(as.numeric(x))
    ) |> 
  filter(!is.na(value)) |> 
  separate(name, into = c("var", "year")) |> 
  mutate(year = as.numeric(year)) |> 
  pivot_wider(names_from = "var", values_from = "value")
```

```{r dta-str-rhs}
#| echo: true
rhs_dta_0 |> select(1:10) |> glimpse()
rhs_meta_0 |> glimpse()
```

### Reshaping data to the re-gression-ready form 

At this step we prepare data in the exact form that enables us to perform any small area estimations. This includes:

-   Dependent variable preparation in the wide format with year-specific poverty rates as columns and regions as rows. `id` column is used as a regional identifier.

-   RHS variables preparation and reshaping:

    -   Computing economically sound ratios, constructing complex variables and performing linear transformation

    -   Reshaping data to the wide format with variables names and years in columns and regions identified by `id` variable in rows.

-   RHS variables selection that maximize the predictive power.


### RHS variables preparation

While computing the new variables, we need to make sure that we:

-   name them uniquely and appropriately;

-   record relevant metadata for them.

@tbl-rhs-descr-stats provides the summary statistics for the RHS variables after we computed additional ones.

```{r var-preparation}
rhs_dta <-
  rhs_dta_0 |> 
  mutate(
    x101 = x4 / x3 # Share of Working Age pop in the region,
  ) |> 
  mutate(year = year + 1) |> 
  left_join(pov_direct |> 
              filter(id == "011212000000") |> 
              filter(type == "arop") |> 
              select(id, year, pov, SE = SD, CV, N), 
            by = join_by(id, year)) |> 
  select(id, year, pov, SE, CV, N, everything()) |> 
  select(-x16)


rhs_meta <- 
  tribble(
    ~var, ~name,
    "x101", "Workage pop share",
    "pov", "Poverty rate (direct est.)",
    "SE", "Standard Error (direct est.)",
    "CV", "Coef of var",
    "N", "N survey obs",
  ) |> 
  bind_rows(rhs_meta_0)

rhs_dta_long <- 
  rhs_dta |>
  pivot_longer(c(pov, SE, CV, N, contains("x")),
               names_to = "var",
               cols_vary = "slowest") |>
  left_join(rhs_meta, by = join_by(var)) |>
  mutate(name = str_c(var, " ", name) |> as_factor()) |>
  mutate(year = as.character(year)) 
```


## Exploratory analysis of data

```{r tbl-rhs-descr-stats}
#| tbl-cap: Descriptive statistics of the RHS variables for all years
rhs_dta_long  |>
  (\(x) bind_rows(x |> mutate(year = "All years"), x))() |>
  filter(year == "All years") |>
  mutate(year = as_factor(year)) |>
  datasummary(
    formula = name  ~ value * (Mean + SD + Min + P50 + Max),
    output = "flextable",
    data = _
  ) |>
  FitFlextableToPage()
```


```{r tbl-rhs-descr-stats-year}
#| tbl-cap: Descriptive statistics of the RHS variables by years
rhs_dta_long |> 
  datasummary(
    formula = name  ~ year * (value * (Mean + SD )) ,
    output = "flextable",
    data = _
  ) |>
  FitFlextableToPage() |> 
  width(1, 2)
```

After all variables are computed, we perform logarithm transformation of all contentious variables, where maximum is above 10, or difference between min and maximum exceeds 10 times.

```{r}
var_to_log <- 
  rhs_dta_long |>
  group_by(year, var) |> 
  summarise(min = min(value), max = max(value)) |> 
  filter(min * 10 < max & max > 10 | max > 100) |> pull(var) |> unique()

rhs_dta_long_log <- 
  rhs_dta_long |>
  group_by(year) |>
  mutate(
    value = ifelse(var %in% var_to_log, log(value), value)
    ) |> 
  ungroup()
```

Descriptive statistics after transformation is:

```{r tbl-rhs-descr-stats-log}
#| tbl-cap: Descriptive statistics of the RHS variables after log transformation
rhs_dta_long_log |> mutate(type = "log") |> 
  bind_rows(rhs_dta_long |> mutate(type = "level")) |> 
  (\(x) bind_rows(x |> mutate(year = "All years"), x))() |>
  mutate(year = as_factor(year)) |> #glimpse()
  datasummary(
    formula = name  ~ year * (value * (Mean ) * type),
    output = "flextable",
    data = _
  ) |>
  FitFlextableToPage()
```

### Exploratory correlation analysis

Before conducting the variable selection, we explore the correlations between our transformed variables and the poverty rates.

```{r tbl-cor}
#| tbl-cap: Correlatoin between poverty rates and key variables
stars.pval <- function(x){
  stars <- c("***", "**", "*", "")
  var <- c(0, 0.01, 0.05, 0.10, 1)
  i <- findInterval(x, var, left.open = T, rightmost.closed = T)
  stars[i]
}

dta_cor <-
  rhs_dta_long_log |> mutate(type = "log") |> 
  bind_rows(rhs_dta_long |> mutate(type = "level")) |> 
  mutate(year = as.numeric(year) + 1) |> 
  left_join(pov_direct |> filter(type == "arop") |> select(id, year, pov),
            by = join_by(id, year)) |> 
  mutate(year = as.character(year)) |> 
  (\(x) bind_rows(x |> mutate(year = "All years"), x))() |>
  filter(year == "All years") |>
  mutate(year = as_factor(year)) |> 
  select(id, year, type, pov, value, name) |> 
  filter(str_detect(name, "x\\d")) |> 
  pivot_wider(names_from = name, values_from = value) |> 
  datawizard::data_group(type) |>
  correlation::correlation() |> 
  as_tibble() |> 
  filter(Parameter1 == "pov") |> 
  mutate(Parameter2 = as_factor(Parameter2) |> fct_reorder(abs(r), .desc = T)) |> 
  mutate(stats = str_c(number(r, 0.001), "", stars.pval(p))) |> 
  select(Group, Variable = Parameter2, stats) |>
  pivot_wider(names_from = Group, values_from = stats) |> 
  arrange(Variable)

dta_cor |> 
  flextable() |>
  FitFlextableToPage()
```


## Saving RHS data

```{r}
rhs_dta_full <- rhs_dta |> select(id, year, matches("x\\d")) 
bd_clean |> pin_write(rhs_dta_full, name = "rhs_dta")
bd_clean |> pin_write(rhs_meta, name = "rhs_meta")
```



